rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isPassenger() {
      return true;  // Temporarily allow all authenticated users to be passengers
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAuthenticated() && isAdmin();
      
      // Profile subcollection
      match /profile/{document=**} {
        allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
      
      // Security events subcollection
      match /security_events/{eventId} {
        allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
        allow create: if isAuthenticated() && isOwner(userId);
      }
      
      // Statistics subcollection
      match /statistics/{document=**} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
      
      // Submissions subcollection
      match /submissions/{submissionId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && isOwner(userId);
        allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
        
        // Reviews subcollection
        match /reviews/{reviewId} {
          allow read: if isAuthenticated();
          allow write: if isAuthenticated() && isAdmin();
        }
      }
      
      // Activity subcollection
      match /activity/{activityId} {
        allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
        allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
    }
    
    // Fares collection
    match /fares/{fareId} {
      allow read: if isAuthenticated();
      // Allow create if user is authenticated and the submitter.uid matches their auth uid
      allow create: if isAuthenticated() && 
        request.resource.data.submitter.uid == request.auth.uid;
      allow update: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Routes collection
    match /routes/{routeId} {
      allow read: if isAuthenticated();
      // Allow create and update for authenticated users since routes are created/updated during fare submission
      allow create, update: if isAuthenticated();
      allow delete: if false;
    }

    // Logs collection
    match /logs/{logId} {
      allow read: if isAuthenticated() && isAdmin();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isAdmin();
      allow delete: if false;
    }
    
    // Support requests collection
    match /support_requests/{requestId} {
      allow read: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
      allow delete: if isAuthenticated() && isAdmin();
    }
  }
}